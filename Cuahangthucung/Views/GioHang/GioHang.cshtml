@using Cuahangthucung.Models
@model List<GioHang>
@{
    ViewBag.Title = "GioHang";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
@if (ViewBag.ThongBao != null)
{
    <div class="alert alert-success">
        @ViewBag.ThongBao
    </div>
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8sh+WyPnv/aMlFQ8nM8iHR7JqoWepE70jZ5LWNl" crossorigin="anonymous">

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
    }

    .cart-container {
        max-width: 800px;
        margin: 30px auto;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .cart-header {
        background-color: #007bff;
        color: #fff;
        padding: 20px;
        text-align: center;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
    }

    .cart-item {
        display: flex;
        align-items: center;
        padding: 20px;
        border-bottom: 1px solid #ddd;
    }

        .cart-item img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 8px;
            margin-right: 20px;
            border: 2px solid #007bff;
        }

    .cart-item-details {
        flex-grow: 1;
    }

        .cart-item-details h4 {
            margin: 0 0 10px;
            font-size: 18px;
            color: #333;
        }

        .cart-item-details p {
            margin: 0;
            color: #777;
        }

    .quantity-controls {
        display: flex;
        align-items: center;
        margin-top: 10px;
    }

        .quantity-controls button {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 8px;
            cursor: pointer;
            border-radius: 4px;
            font-size: 16px;
        }

    .quantity-input {
        width: 40px;
        text-align: center;
        margin: 0 8px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 8px;
    }

    .cart-item-actions {
        display: flex;
        gap: 10px;
        margin-top: 10px;
    }

        .cart-item-actions button {
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }

    .btn-confirm {
        background-color: #42dd2e;
        color: #fff;
        border: none;
    }

    .total-section {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
        padding: 20px;
    }

        .total-section span {
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }

    .checkout-buttons {
        display: flex;
        justify-content: flex-end;
        margin-top: 20px;
        padding: 20px;
        border-top: 1px solid #ddd;
    }

        .checkout-buttons a {
            text-decoration: none;
            margin-left: 10px;
        }

    .btn-danger {
        background-color: #dc3545;
        color: #fff;
        border: none;
    }

    .btn-success {
        background-color: #28a745;
        color: #fff;
        border: none;
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
        border: none;
    }
</style>

<div class="cart-container">
    <div class="cart-header">
        <h2>GIỎ HÀNG</h2>
    </div>

    @foreach (var item in Model)
    {

        <div class="cart-item" style="margin-left:250px" >
            <img alt="@item.sTenTC" src="~/Image/@item.sAnhBia" style="width:200px; height:200px"   />
            @using (Html.BeginForm("CapNhatGioHang", "GioHang", new { iMaTC = item.iMaTC }))
            {
               
                <p style="font-size:16px; color:red;font-weight:bold" >Đơn giá: @string.Format("{0:#,##0,0}", @item.dDonGia) VNĐ</p>
                <p style="font-size: 16px; color: red; font-weight: bold ">Thành tiền:<td align="center">@string.Format("{0:#,##0,0}", @item.dThanhTien) VNĐ</td> </p>
                <td>
                    <a href="@Url.Action("Details","User", new { id =item.iMaTC})" style="font-size:16px;color:red;font-weight:bold ">Xem chi tiết</a>
                    
                </td>
                <div class="cart-item-details">
                    <p style="font-size:16px; color:red;font-weight:bold" >Số lượng:<input class="quantity-input form-control" type="number" min="1" name="txtSoLuong" value="@item.iSoLuong"
                           style="background-color:#f4ff94" /></p>
                </div>

                <div class="cart-item-actions">
                    <button class="btn btn-primary btn-confirm" onclick="confirmUpdate('@item.iMaTC')">Xác nhận</button>
                    <button class="btn btn-danger" onclick="removeItem('@item.iMaTC')">Xóa</button>
                </div>
            }
        </div>
    }

    <div class="total-section">
        <span>Tổng số lượng: <span id="totalQuantity">@ViewBag.TongSoLuong </span></span>
        <span>Tổng tiền: <span id="totalPrice"> <p style="font-size:16px; color:red;font-weight:bold"> @string.Format("{0:#,##0,0}", @ViewBag.TongTien) VNĐ</p></span></span>
    </div>

    <div class="checkout-buttons">
        <a href="@Url.Action("XoaGioHang")" class="btn btn-danger" style="font-size:16px">Xóa giỏ hàng</a>
        <a href="@Url.Action("DatHang", "GioHang", new { id = "datHangButton" })" class="btn btn-success" style="font-size:16px">Thanh toán </a>
        @*<a href="@Url.Action("DatHangOnline", "GioHang", new { id = "datHangButton" })" class="btn btn-success" style="font-size:16px">Thanh toán online</a>*@
        <a href="@Url.Action("Index1", "User")" class="btn btn-primary" style="font-size:16px">Tiếp tục mua sắm</a>
    </div>
</div>

<!-- Add the Bootstrap JS and Popper.js scripts at the end of your HTML body if not already included -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha2/dist/js/bootstrap.bundle.min.js" integrity="sha384-o4LyU1HQcb5RmeVTz4W1GT8gq23G2KXYo3WOz9z+cbNZpF07I6Ou/TtF8uIJDG7k" crossorigin="anonymous"></script>

<script>
    function updateQuantity(itemId, delta) {
        var quantityElement = document.querySelector("#quantity-" + itemId);
        var currentQuantity = parseInt(quantityElement.value) + delta;
        if (currentQuantity < 1) {
            currentQuantity = 1;
        }
        quantityElement.value = currentQuantity;
        updateTotal();
    }

    function confirmUpdate(itemId) {
        var quantityElement = document.querySelector("#quantity-" + itemId);
        var newQuantity = parseInt(quantityElement.value);

        // You can use AJAX here to send the updated quantity to the server if needed

        // For now, let's just update the total on the client side
        updateTotal();
    }

    function updateTotal() {
        var quantityInputs = document.querySelectorAll(".quantity-input");
        var totalQuantity = 0;
        var totalPrice = 0;

        quantityInputs.forEach(function (input) {
            var quantity = parseInt(input.value);
            var price = parseInt(input.parentNode.nextElementSibling.innerText.replace(/\D/g, ''));
            totalQuantity += quantity;
            totalPrice += quantity * price;
        });

        document.getElementById("totalQuantity").innerText = totalQuantity.toLocaleString();
        document.getElementById("totalPrice").innerText = totalPrice.toLocaleString() + ' VNĐ';
    }
</script>
